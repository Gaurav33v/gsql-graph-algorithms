CREATE QUERY pageRank_json (FLOAT max_change, INT max_iter, FLOAT damping, STRING v_type, STRING e_type, INT output_limit, BOOL display) {
    TYPEDEF TUPLE<VERTEX vertex_id, FLOAT score> VERTEX_SCORE;
    HeapAccum<VERTEX_SCORE> (output_limit, score DESC) @@top_scores_heap;
    MaxAccum<FLOAT> @@max_diff = 9999; # max score change in an interation
    SumAccum<FLOAT> @received_score = 0; # sum of scores each vertex receives FROM neighbors
    SumAccum<FLOAT> @score = 1; # Initial score for every vertex is 1
    SetAccum<EDGE> @@edge_set; # list of traversed edges, if display is needed

    start = {v_type.*}; # Start with all vertices of specified type
    WHILE @@max_diff > max_change LIMIT max_iter DO
        @@max_diff = 0;
        v = SELECT s
            FROM start:s - (e_type:e) -> :t
            ACCUM t.@received_score += s.@score/(s.outdegree(e_type))
            POST-ACCUM s.@score = (1.0 - damping) + damping * s.@received_score,
                       s.@received_score = 0,
                       @@max_diff += abs(s.@score - s.@score'); // '
    END;

    IF output_limit > 0 THEN
        v = SELECT s FROM start:s
            POST-ACCUM @@top_scores_heap += VERTEX_SCORE(s, s.@score);
        PRINT @@top_scores_heap;
    END;
    IF display THEN
        PRINT start[start.@score];
        start = SELECT s
                FROM start:s -(e_type:e)-> :t
                ACCUM @@edge_set += e
        ;
        PRINT @@edge_set;
    END;
}   

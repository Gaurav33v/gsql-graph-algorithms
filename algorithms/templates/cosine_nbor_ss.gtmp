*ATTR*CREATE QUERY cosine_nbor_ss*EXT* (VERTEX<*vertex-types*> source, INT topK) FOR GRAPH *graph* {	
*ACCM*CREATE QUERY cosine_nbor_ss*EXT* (VERTEX source, INT topK) FOR GRAPH *graph* RETURNS (MapAccum<VERTEX, FLOAT>) {	
*FILE*CREATE QUERY cosine_nbor_ss*EXT* (VERTEX source, INT topK, FILE f) FOR GRAPH *graph* {	
/* This query calculates the Cosine Similarity between a given vertex and every other vertex.	
Cosine similarity = A \dot B / ||A|| \dot ||B||	
1. The JSON and FILE version keeps the top k pairs of vertices. The result in FILE version is not in order.	
2. The Attribute version insert edges between the pairs, with the score as an edge attribute.	
   A similarity edge with one FLOAT attribute in the schema is required for this version.	
*/	
        SumAccum<FLOAT> @numerator, @@norm1, @norm2, @similarity;	
*ACCM*  MapAccum<VERTEX, FLOAT> @@topK_result;	
        start = {source};	
        subjects = SELECT t	
                   FROM start:s -(*edge-types*:e)-> :t	
                   ACCUM t.@numerator = e.*edge-weight*,	
                         @@norm1 += pow(e.*edge-weight*, 2);	

        neighbours = SELECT t	
                     FROM subjects:s -(*sec-edge-types*:e)->:t	
                     WHERE t != source	
                     ACCUM t.@numerator += s.@numerator * e.*edge-weight*;	

        neighbours = SELECT s	
                     FROM neighbours:s -(*edge-types*:e)-> :t	
                     ACCUM s.@norm2 += pow(e.*edge-weight*, 2)	
        	     POST-ACCUM s.@similarity = s.@numerator/sqrt(@@norm1 * s.@norm2)	
                     ORDER BY s.@similarity DESC	
                     LIMIT topK;	

*ATTR*  neighbours = SELECT s	
*ATTR*               FROM neighbours:s	
*ATTR*               POST-ACCUM insert into *insert-edge-name* values(source, s, s.@similarity);	
*ACCM*  PRINT neighbours.@similarity;	
*ACCM*  neighbours = SELECT s	
*ACCM*               FROM neighbours:s	
*ACCM*               ACCUM @@topK_result += (s -> s.@similarity);	
*ACCM*  return @@topK_result;	
*FILE*  neighbours = SELECT s 	
*FILE*               FROM neighbours:s	
*FILE*               POST-ACCUM f.println(source, s, s.@similarity);	
}	
